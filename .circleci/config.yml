version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
  aws-cli: circleci/aws-cli@2.0.3
# Define the jobs we want to run for this project
commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
          # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}
jobs:
  create_infrastructure: 
    docker:
      - image: amazon/aws-cli
    steps:
    - checkout
    - run:
       name: Create Cloudformation Stack
       command: |
          aws cloudformation deploy \
          --template-file template.yml \
          --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
          --capabilities "CAPABILITY_IAM" "CAPABILITY_NAMED_IAM" \
          --region us-east-1
    - destroy_environment
  # smoke_test:
  #  docker:
  #  - image: alpine:latest
  #  steps:
  #  - run:
  #      name: Test job
  #      # Fail the job intentionally to simulate an error.
  #      command:  return 1
  #  - destroy_environment  
    
  # configure_infrastructure: 
  #   docker:
  #     - image: python:3.7-alpine3.11
  #   steps:
  #     - checkout
  #     - add_ssh_keys:
  #         fingerprints: ["59:1b:d6:07:22:3e:9f:65:67:19:84:c9:46:e3:10:22"] # You can get this ID in the section where you registered the SSH Key
  #     - run:
  #         name: Install dependencies
  #         command: |
  #           # install the dependencies needed for your playbook
  #           apk add --update ansible 
  #     - run:
  #         name: Configure server
  #         command: |
  #           ansible-playbook -i inventory.txt mainremote.yml
  # smoke_test:
  #   docker:
  #   - image: alpine:latest
  #   steps:
  #   - run: apk add --update curl
  #   - run:
  #       name: smoke test
  #       command: |
  #        URL="https://blog.udacity.com/"
  #        # Test if website exists
  #        if curl -s --head ${URL} 
  #        then
  #         return 0
  #        else
  #         return 1
  #        fi
# Sequential workflow
workflows:
  myWorkflow:  # Name the workflow
    jobs:
      - create_infrastructure
      # - configure_infrastructure
      # - smoke_test